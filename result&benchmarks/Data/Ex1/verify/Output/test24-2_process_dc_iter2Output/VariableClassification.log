IntBool

[assume::cond, main::__CPAchecker_TMP_2, __bswap_32::__bsx, __bswap_64::__bsx, main::__retval__, __bswap_16::__bsx]

IntEq

[]

IntAdd

[main::local_18]

IntOverflow

[check::(ad1[b]).a, check::b, main::local_18, main::((&dStack_d8)[ad2->a]).a, main::extraout_var, main::iVar1, check::__retval__, main::ad2->a, main::tmp_var_1_int]

ALL

[check::b, main::iVar1, main::((&dStack_d8)[local_18]).a, __bswap_32::__bsx, __uint32_identity::__x, __uint32_identity::__retval__, __bswap_16::__bsx, assume::cond, check::ad1, main::local_18, main::__CPAchecker_TMP_2, check::__retval__, main::pa, __bswap_64::__CPAchecker_TMP_0, main::tmp_var_1_int, main::dStack_d8, __bswap_16::__CPAchecker_TMP_0, main::ad2->a, main::(ad1[((long)local_18) + -1]).b, __bswap_64::__retval__, __uint64_identity::__retval__, main::__retval__, __bswap_32::__retval__, check::(ad1[b]).a, main::ad1, main::((&dStack_d8)[ad2->a]).a, __uint16_identity::__x, main::extraout_var, main::ad2, __bswap_32::__CPAchecker_TMP_0, __bswap_64::__bsx, __uint64_identity::__x, main::(ad1[19]).a, __bswap_16::__retval__, __uint16_identity::__retval__, main::(ad1[19]).b]

DEPENDENCIES

[[__bswap_16::__CPAchecker_TMP_0, __bswap_16::__retval__] --> [],
[__bswap_16::__bsx] --> [],
[__bswap_32::__CPAchecker_TMP_0, __bswap_32::__retval__] --> [],
[__bswap_32::__bsx] --> [],
[__bswap_64::__CPAchecker_TMP_0, __bswap_64::__retval__] --> [],
[__bswap_64::__bsx] --> [],
[__uint16_identity::__retval__, __uint16_identity::__x] --> [],
[__uint32_identity::__retval__, __uint32_identity::__x] --> [],
[__uint64_identity::__retval__, __uint64_identity::__x] --> [],
[assume::cond] --> [0],
[check::(ad1[b]).a, check::__retval__, check::b, main::((&dStack_d8)[ad2->a]).a, main::ad2->a, main::extraout_var, main::iVar1, main::tmp_var_1_int] --> [-1, 0, 1, 10, 1048576],
[check::ad1, main::dStack_d8] --> [],
[main::ad1] --> [20],
[main::pa] --> [],
[main::ad2] --> [],
[main::local_18] --> [0, 1, 20],
[main::((&dStack_d8)[local_18]).a, main::(ad1[19]).b] --> [],
[main::(ad1[((long)local_18) + -1]).b, main::(ad1[19]).a] --> [],
[main::__retval__] --> [0],
[main::__CPAchecker_TMP_2] --> [0]]

RELEVANT VARS

[main::ad1, check::b, assume::cond, main::dStack_d8, check::ad1, main::local_18, main::extraout_var, main::ad2, main::iVar1, check::__retval__, main::tmp_var_1_int]

RELEVANT FIELDS

{struct __anon_type_dummy=[a, b]}
