(set-info :source |printed by MathSAT|)
(declare-fun __ADDRESS_OF_a@ () (_ BitVec 32))
(declare-fun a@2 () (_ BitVec 32))
(declare-fun __ADDRESS_OF_b@ () (_ BitVec 32))
(declare-fun b@2 () (_ BitVec 32))
(declare-fun *int@1 () (Array (_ BitVec 32) (_ BitVec 32)))
(declare-fun |equal::a@2| () (_ BitVec 32))
(declare-fun |equal::b@2| () (_ BitVec 32))
(assert (let ((.def_48 (= |equal::a@2| |equal::b@2|)))(let ((.def_49 (not .def_48)))(let ((.def_40 (select *int@1 __ADDRESS_OF_b@)))(let ((.def_41 (= b@2 .def_40)))(let ((.def_36 (select *int@1 __ADDRESS_OF_a@)))(let ((.def_37 (= a@2 .def_36)))(let ((.def_45 (and .def_37 .def_41)))(let ((.def_43 (= __ADDRESS_OF_b@ |equal::b@2|)))(let ((.def_39 (= __ADDRESS_OF_a@ |equal::a@2|)))(let ((.def_44 (and .def_39 .def_43)))(let ((.def_46 (and .def_44 .def_45)))(let ((.def_24 (bvurem __ADDRESS_OF_b@ (_ bv4 32))))(let ((.def_25 (= .def_24 (_ bv0 32))))(let ((.def_15 (bvadd (_ bv4 32) __ADDRESS_OF_a@)))(let ((.def_23 (bvslt .def_15 __ADDRESS_OF_b@)))(let ((.def_31 (and .def_23 .def_25)))(let ((.def_27 (bvadd (_ bv4 32) __ADDRESS_OF_b@)))(let ((.def_28 (bvslt (_ bv0 32) .def_27)))(let ((.def_32 (and .def_28 .def_31)))(let ((.def_30 (= b@2 (_ bv0 32))))(let ((.def_33 (and .def_30 .def_32)))(let ((.def_12 (bvurem __ADDRESS_OF_a@ (_ bv4 32))))(let ((.def_13 (= .def_12 (_ bv0 32))))(let ((.def_11 (bvslt (_ bv0 32) __ADDRESS_OF_a@)))(let ((.def_19 (and .def_11 .def_13)))(let ((.def_16 (bvslt (_ bv0 32) .def_15)))(let ((.def_20 (and .def_16 .def_19)))(let ((.def_18 (= a@2 (_ bv0 32))))(let ((.def_21 (and .def_18 .def_20)))(let ((.def_34 (and .def_21 .def_33)))(let ((.def_47 (and .def_34 .def_46)))(let ((.def_52 (and .def_47 .def_49))).def_52)))))))))))))))))))))))))))))))))