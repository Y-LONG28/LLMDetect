IntBool

[assume::cond, main::__CPAchecker_TMP_2, main::input, __bswap_32::__bsx, __bswap_64::__bsx, id::x_local, main::__retval__, main::result, __bswap_16::__bsx]

IntEq

[]

IntAdd

[id::iVar1, main::iVar1, id::x, id::__retval__]

IntOverflow

[id::iVar1, main::iVar1, id::x, id::__retval__]

ALL

[main::iVar1, __bswap_32::__bsx, id::x, __uint32_identity::__x, __uint32_identity::__retval__, __bswap_16::__bsx, assume::cond, main::__CPAchecker_TMP_2, main::input, id::x_local, __bswap_64::__CPAchecker_TMP_0, main::result, id::iVar1, __bswap_16::__CPAchecker_TMP_0, __bswap_64::__retval__, __uint64_identity::__retval__, main::__retval__, __bswap_32::__retval__, id::__retval__, __uint16_identity::__x, __bswap_32::__CPAchecker_TMP_0, __bswap_64::__bsx, __uint64_identity::__x, __bswap_16::__retval__, __uint16_identity::__retval__]

DEPENDENCIES

[[__bswap_16::__CPAchecker_TMP_0, __bswap_16::__retval__] --> [],
[__bswap_16::__bsx] --> [],
[__bswap_32::__CPAchecker_TMP_0, __bswap_32::__retval__] --> [],
[__bswap_32::__bsx] --> [],
[__bswap_64::__CPAchecker_TMP_0, __bswap_64::__retval__] --> [],
[__bswap_64::__bsx] --> [],
[__uint16_identity::__retval__, __uint16_identity::__x] --> [],
[__uint32_identity::__retval__, __uint32_identity::__x] --> [],
[__uint64_identity::__retval__, __uint64_identity::__x] --> [],
[assume::cond] --> [0],
[id::__retval__, id::iVar1, main::iVar1] --> [0, 1, 5],
[id::x_local] --> [],
[id::x] --> [0, 1, 5],
[main::result] --> [],
[main::input] --> [],
[main::__retval__] --> [0],
[main::__CPAchecker_TMP_2] --> [0]]

RELEVANT VARS

[id::x, assume::cond, id::iVar1, main::iVar1, id::__retval__]

RELEVANT FIELDS

{}
